@page
@model TeamBlog.Pages.Articles.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<div class="row justify-content-center mt-5">
    <div class="col-lg-8">
        <article>
            <header class="mb-4">
                <h1 class="fw-bolder mb-1">
                    @Html.DisplayFor(model => model.Article.Title)
                    <span class="badge bg-secondary">
                        @if ((await AuthorizationService.AuthorizeAsync(
                        User, Model.Article,
                        ArticleOperations.Update)).Succeeded)
                        {
                            <a asp-page="./Edit" asp-route-id="@Model.Article.ArticleID">Edit</a>

                        }
                    </span>
                </h1>
                <div class="text-muted fst-italic mb-2">
                    Posted on @Html.DisplayFor(model => model.Article.PubDate),  by Start Bootstrap

                </div>
                <a class="badge bg-secondary text-decoration-none link-light" href="#!">
                    @Html.DisplayFor(model => model.Article.Category.Name)
                </a>
            </header>
            <figure class="mb-4">
                @Html.DisplayFor(model => model.Article.FileName)
                @Html.DisplayFor(model => model.Article.File)

            </figure>
            <section class="mb-5">
                @Html.Raw(Model.Article.Content)
            </section>

            @if (Model.Article.Status != ArticleStatus.Approved)
            {
                @if ((await AuthorizationService.AuthorizeAsync(
               User, Model.Article, ArticleOperations.Approve)).Succeeded)
                {
                    <form style="display:inline;" method="post">
                        <input type="hidden" name="id" value="@Model.Article.ArticleID" />
                        <input type="hidden" name="status" value="@ArticleStatus.Approved" />
                        <button type="submit" class="btn btn-xs btn-success">Approve</button>
                    </form>
                }
            }

            @if (Model.Article.Status != ArticleStatus.Rejected)
            {
                @if ((await AuthorizationService.AuthorizeAsync(
               User, Model.Article, ArticleOperations.Reject)).Succeeded)
                {
                    <form style="display:inline;" method="post">
                        <input type="hidden" name="id" value="@Model.Article.ArticleID" />
                        <input type="hidden" name="status" value="@ArticleStatus.Rejected" />
                        <button type="submit" class="btn btn-xs btn-danger">Reject</button>
                    </form>
                }
            }
        </article>
    </div>
</div>